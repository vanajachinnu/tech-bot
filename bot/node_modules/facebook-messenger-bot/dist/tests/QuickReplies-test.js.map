{"version":3,"sources":["../../src/tests/QuickReplies-test.js"],"names":["describe","it","quickReplies","add","text","data","isLocation","deepEqual","payload","title","content_type","toJSON","fail","e","ok","event"],"mappings":";;AAAA;;;;AACA;;;;AAGAA,SAAS,cAAT,EAAyB,YAAM;AAC7BC,KAAG,SAAH,EAAc,YAAM;AAClB,QAAMC,eAAe,oBAArB;AACAA,iBAAaC,GAAb,CAAiB,EAACC,MAAM,QAAP,EAAiBC,MAAM,mBAAvB,EAAjB;AACAH,iBAAaC,GAAb,CAAiB,EAACC,MAAM,SAAP,EAAkBE,YAAY,IAA9B,EAAjB;AACAJ,iBAAaC,GAAb,CAAiB,EAACC,MAAM,MAAP,EAAeC,MAAM,iBAArB,EAAjB;;AAEA,qBAAOE,SAAP,CAAiB,CAAC;AAChBC,eAAS,8BADO;AAEhBC,aAAO,QAFS;AAGhBC,oBAAc;AAHE,KAAD,EAId;AACDF,eAAS,IADR;AAEDC,aAAO,SAFN;AAGDC,oBAAc;AAHb,KAJc,EAQd;AACDF,eAAS,4BADR;AAEDC,aAAO,MAFN;AAGDC,oBAAc;AAHb,KARc,CAAjB,EAYIR,aAAaS,MAAb,EAZJ;AAaD,GAnBD;;AAqBAV,KAAG,uBAAH,EAA4B,YAAM;AAChC,QAAI;AACF,UAAMC,eAAe,oBAArB;AACAA,mBAAaC,GAAb,CAAiB,EAAjB;AACA,uBAAOS,IAAP,CAAY,6BAAZ;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACV,uBAAOC,EAAP,CAAU,mCAAV;AACD;AACF,GARD;;AAUAb,KAAG,uBAAH,EAA4B,YAAM;AAChC,QAAI;AACF,UAAMC,eAAe,oBAArB;AACAA,mBAAaC,GAAb,CAAiB,EAACY,OAAO,cAAR,EAAjB;AACA,uBAAOH,IAAP,CAAY,6BAAZ;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACV,uBAAOC,EAAP,CAAU,mCAAV;AACD;AACF,GARD;AASD,CAzCD","file":"QuickReplies-test.js","sourcesContent":["import assert from 'assert';\nimport {QuickReplies} from '../..';\n\n\ndescribe('QuickReplies', () => {\n  it('#toJSON', () => {\n    const quickReplies = new QuickReplies();\n    quickReplies.add({text: 'Google', data: 'http://google.com'});\n    quickReplies.add({text: 'Address', isLocation: true});\n    quickReplies.add({text: 'Bing', data: 'http://bing.com'});\n\n    assert.deepEqual([{\n      payload: '{\"data\":\"http://google.com\"}',\n      title: 'Google',\n      content_type: 'text'\n    }, {\n      payload: '{}',\n      title: 'Address',\n      content_type: 'location'\n    }, {\n      payload: '{\"data\":\"http://bing.com\"}',\n      title: 'Bing',\n      content_type: 'text'\n    }], quickReplies.toJSON());\n  });\n\n  it('should throw an error', () => {\n    try {\n      const quickReplies = new QuickReplies();\n      quickReplies.add({});\n      assert.fail('should have thrown an error');\n    } catch (e) {\n      assert.ok('does not have data/url attributes');\n    }\n  });\n\n  it('should throw an error', () => {\n    try {\n      const quickReplies = new QuickReplies();\n      quickReplies.add({event: 'simple-event'});\n      assert.fail('should have thrown an error');\n    } catch (e) {\n      assert.ok('does not have data/url attributes');\n    }\n  });\n});\n"]}