{"version":3,"sources":["../src/QuickReplies.js"],"names":["QuickReplies","_quickReplies","text","data","event","isLocation","Error","push","quickReplies","reply","contentType","payload","title","String","content_type","length","array","quickreplies","forEach","add","arg"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;IAEMA,Y;AACJ,0BAAc;AAAA;;AACZ,SAAKC,aAAL,GAAqB,EAArB;AACD;;;;8BAEoC;AAAA,UAAhCC,IAAgC,QAAhCA,IAAgC;AAAA,UAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,UAApBC,KAAoB,QAApBA,KAAoB;AAAA,UAAbC,UAAa,QAAbA,UAAa;;AACnC,UAAI,CAACF,IAAD,IAAS,CAACC,KAAV,IAAmB,CAACC,UAAxB,EAAoC;AAClC,cAAMC,MAAM,iFAAN,CAAN;AACD;;AAED,WAAKL,aAAL,CAAmBM,IAAnB,CAAwB,EAACL,MAAMA,QAAQ,YAAf,EAA6BE,YAA7B,EAAoCD,UAApC,EAA0CE,sBAA1C,EAAxB;AACA,aAAO,IAAP;AACD;;;6BAEQ;AACP,UAAMG,eAAe,EAArB;AADO;AAAA;AAAA;;AAAA;AAEP,wDAAoB,KAAKP,aAAzB,4GAAwC;AAAA,cAA7BQ,KAA6B;;AACtC,cAAIC,cAAc,MAAlB;AACA,cAAMC,UAAU,yBAAe,EAACR,MAAMM,MAAMN,IAAb,EAAmBC,OAAOK,MAAML,KAAhC,EAAf,CAAhB;AACA,cAAI,CAACK,MAAMP,IAAX,EAAiB;AACf,kBAAM,IAAII,KAAJ,CAAU,mBAAV,CAAN;AACD;AACD,cAAIG,MAAMJ,UAAV,EAAsB;AACpBK,0BAAc,UAAd;AACD;;AAEDF,uBAAaD,IAAb,CAAkB,EAACI,gBAAD,EAAUC,OAAO,gBAAIC,OAAOJ,MAAMP,IAAb,CAAJ,EAAwB,EAAxB,CAAjB,EAA8CY,cAAcJ,WAA5D,EAAlB;AACD;AAbM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeP,aAAOF,YAAP;AACD;;;wBAQY;AACX,aAAO,KAAKP,aAAL,CAAmBc,MAA1B;AACD;;;yBARWC,K,EAAO;AACjB,UAAMC,eAAe,IAAIjB,YAAJ,EAArB;AACAgB,YAAME,OAAN,CAAc;AAAA,eAAOD,aAAaE,GAAb,CAAiBC,GAAjB,CAAP;AAAA,OAAd;AACA,aAAOH,YAAP;AACD;;;;;kBAOYjB,Y","file":"QuickReplies.js","sourcesContent":["import {cut} from './libs/utils';\n\nclass QuickReplies {\n  constructor() {\n    this._quickReplies = [];\n  }\n\n  add({text, data, event, isLocation}) {\n    if (!data && !event && !isLocation) {\n      throw Error('Must provide a url or data i.e. {data: null} or {url: \\'https://facebook.com\\'}');\n    }\n\n    this._quickReplies.push({text: text || 'QuickReply', event, data, isLocation});\n    return this;\n  }\n\n  toJSON() {\n    const quickReplies = [];\n    for (const reply of this._quickReplies) {\n      let contentType = 'text';\n      const payload = JSON.stringify({data: reply.data, event: reply.event});\n      if (!reply.text) {\n        throw new Error('No text attribute');\n      }\n      if (reply.isLocation) {\n        contentType = 'location';\n      }\n\n      quickReplies.push({payload, title: cut(String(reply.text), 20), content_type: contentType});\n    }\n\n    return quickReplies;\n  }\n\n  static from(array) {\n    const quickreplies = new QuickReplies();\n    array.forEach(arg => quickreplies.add(arg));\n    return quickreplies;\n  }\n\n  get length() {\n    return this._quickReplies.length;\n  }\n}\n\nexport default QuickReplies;\n"]}